.版本 2
.支持库 eAPI

.程序集 窗口程序集_启动窗口

.子程序 窗口_取句柄, 整数型, , 本子程序采用【精易编程助手】生成,成功返回窗口句柄,失败返回0
.参数 参数_父窗口句柄, 整数型, 可空, 如果是取顶级的窗口句柄请留空
.参数 参数_子窗口句柄, 整数型, 可空, 如果是取顶级的窗口句柄请留空
.参数 参数_窗口类名, 文本型, 可空, 窗口的类名
.参数 参数_窗口标题, 文本型, 可空, 窗口听标题

返回 (_查找子窗口 (参数_父窗口句柄, 参数_子窗口句柄, 参数_窗口类名, 参数_窗口标题))

.子程序 功能_取句柄, 整数型, , 本子程序采用【精易编程助手】生成,成功返回窗口句柄,失败返回0
.局部变量 局_句柄, 整数型

局_句柄 ＝ 窗口_取句柄 (, , “OrpheusBrowserHost”, )
.如果真 (局_句柄 ＝ 0)
    返回 (0)
.如果真结束
返回 (局_句柄)


.子程序 __启动窗口_创建完毕

config分割 ＝ 分割文本 (到文本 (读入文件 (取运行目录 () ＋ “\config.txt”)), “;”, )
输入文件 ＝ config分割 [1]
输出文件 ＝ config分割 [2]


时钟1.时钟周期 ＝ 1000
时钟2.时钟周期 ＝ 2000
json文本 ＝ 到文本 (读入文件 (取运行目录 () ＋ 输入文件))  ' ANSI编码
歌曲标题 ＝ 取窗口标题 (功能_取句柄 ())
歌曲标题分割 ＝ 分割文本 (歌曲标题, “ - ”, )
歌手 ＝ 歌曲标题分割 [取数组成员数 (歌曲标题分割)]
歌名 ＝ 取文本左边 (歌曲标题, 取文本长度 (歌曲标题) － 取文本长度 (歌手) － 取文本长度 (“ - ”))
歌名 ＝ 文本_替换 (歌名, , , , “　”, “ ”)
歌名编辑框.内容 ＝ 歌名
歌手编辑框.内容 ＝ 歌手

.子程序 _时钟1_周期事件

歌曲标题 ＝ 取窗口标题 (功能_取句柄 ())
歌曲标题分割 ＝ 分割文本 (歌曲标题, “ - ”, )
歌手 ＝ 歌曲标题分割 [取数组成员数 (歌曲标题分割)]
歌名 ＝ 取文本左边 (歌曲标题, 取文本长度 (歌曲标题) － 取文本长度 (歌手) － 取文本长度 (“ - ”))
歌名 ＝ 文本_替换 (歌名, , , , “　”, “ ”)

.如果真 (歌名编辑框.内容 ≠ 歌名 或 歌手编辑框.内容 ≠ 歌手)
    歌名编辑框.内容 ＝ 歌名
    歌手编辑框.内容 ＝ 歌手
.如果真结束


.子程序 _时钟2_周期事件

歌名p ＝ #引号 ＋ 歌名 ＋ #引号
歌名位置 ＝ 寻找文本 (json文本, 歌名p, , 假)
歌手开始位置 ＝ 寻找文本 (json文本, #歌手_start, 歌名位置, 假)
歌手结束位置 ＝ 寻找文本 (json文本, #歌手_end, 歌手开始位置, 假)
json文本_歌手 ＝ 取文本中间 (json文本, 歌手开始位置 ＋ 取文本长度 (#歌手_start), 歌手结束位置 － 歌手开始位置 － 取文本长度 (#歌手_start))

.如果真 (json文本_歌手 ≠ 歌手)
    歌名位置 ＝ 寻找文本 (json文本, 歌名p, 歌手结束位置, 假)
    歌手开始位置 ＝ 寻找文本 (json文本, #歌手_start, 歌名位置, 假)
    歌手结束位置 ＝ 寻找文本 (json文本, #歌手_end, 歌手开始位置, 假)
    json文本_歌手 ＝ 取文本中间 (json文本, 歌手开始位置 ＋ 取文本长度 (#歌手_start), 歌手结束位置 － 歌手开始位置 － 取文本长度 (#歌手_start))
    .如果真 (json文本_歌手 ≠ 歌手)
        歌名位置 ＝ 寻找文本 (json文本, 歌名p, 歌手结束位置, 假)
        歌手开始位置 ＝ 寻找文本 (json文本, #歌手_start, 歌名位置, 假)
        歌手结束位置 ＝ 寻找文本 (json文本, #歌手_end, 歌手开始位置, 假)
        json文本_歌手 ＝ 取文本中间 (json文本, 歌手开始位置 ＋ 取文本长度 (#歌手_start), 歌手结束位置 － 歌手开始位置 － 取文本长度 (#歌手_start))
        .如果真 (json文本_歌手 ≠ 歌手)
            歌名位置 ＝ 寻找文本 (json文本, 歌名p, 歌手结束位置, 假)
            歌手开始位置 ＝ 寻找文本 (json文本, #歌手_start, 歌名位置, 假)
            歌手结束位置 ＝ 寻找文本 (json文本, #歌手_end, 歌手开始位置, 假)
            json文本_歌手 ＝ 取文本中间 (json文本, 歌手开始位置 ＋ 取文本长度 (#歌手_start), 歌手结束位置 － 歌手开始位置 － 取文本长度 (#歌手_start))
            .如果真 (json文本_歌手 ≠ 歌手)
                歌名位置 ＝ 寻找文本 (json文本, 歌名p, 歌手结束位置, 假)
                歌手开始位置 ＝ 寻找文本 (json文本, #歌手_start, 歌名位置, 假)
                歌手结束位置 ＝ 寻找文本 (json文本, #歌手_end, 歌手开始位置, 假)
                json文本_歌手 ＝ 取文本中间 (json文本, 歌手开始位置 ＋ 取文本长度 (#歌手_start), 歌手结束位置 － 歌手开始位置 － 取文本长度 (#歌手_start))
                .如果真 (json文本_歌手 ≠ 歌手)
                    歌名位置 ＝ 寻找文本 (json文本, 歌名p, 歌手结束位置, 假)
                    歌手开始位置 ＝ 寻找文本 (json文本, #歌手_start, 歌名位置, 假)
                    歌手结束位置 ＝ 寻找文本 (json文本, #歌手_end, 歌手开始位置, 假)
                    json文本_歌手 ＝ 取文本中间 (json文本, 歌手开始位置 ＋ 取文本长度 (#歌手_start), 歌手结束位置 － 歌手开始位置 － 取文本长度 (#歌手_start))
                    .如果真 (json文本_歌手 ≠ 歌手)
                        歌名位置 ＝ 寻找文本 (json文本, 歌名p, 歌手结束位置, 假)
                        歌手开始位置 ＝ 寻找文本 (json文本, #歌手_start, 歌名位置, 假)
                        歌手结束位置 ＝ 寻找文本 (json文本, #歌手_end, 歌手开始位置, 假)
                        json文本_歌手 ＝ 取文本中间 (json文本, 歌手开始位置 ＋ 取文本长度 (#歌手_start), 歌手结束位置 － 歌手开始位置 － 取文本长度 (#歌手_start))
                        .如果真 (json文本_歌手 ≠ 歌手)
                            歌名位置 ＝ 寻找文本 (json文本, 歌名p, 歌手结束位置, 假)
                            歌手开始位置 ＝ 寻找文本 (json文本, #歌手_start, 歌名位置, 假)
                            歌手结束位置 ＝ 寻找文本 (json文本, #歌手_end, 歌手开始位置, 假)
                            json文本_歌手 ＝ 取文本中间 (json文本, 歌手开始位置 ＋ 取文本长度 (#歌手_start), 歌手结束位置 － 歌手开始位置 － 取文本长度 (#歌手_start))
                            .如果真 (json文本_歌手 ≠ 歌手)
                                歌名位置 ＝ 寻找文本 (json文本, 歌名p, 歌手结束位置, 假)
                                歌手开始位置 ＝ 寻找文本 (json文本, #歌手_start, 歌名位置, 假)
                                歌手结束位置 ＝ 寻找文本 (json文本, #歌手_end, 歌手开始位置, 假)
                                json文本_歌手 ＝ 取文本中间 (json文本, 歌手开始位置 ＋ 取文本长度 (#歌手_start), 歌手结束位置 － 歌手开始位置 － 取文本长度 (#歌手_start))
                                .如果真 (json文本_歌手 ≠ 歌手)
                                    歌名位置 ＝ 寻找文本 (json文本, 歌名p, 歌手结束位置, 假)
                                    歌手开始位置 ＝ 寻找文本 (json文本, #歌手_start, 歌名位置, 假)
                                    歌手结束位置 ＝ 寻找文本 (json文本, #歌手_end, 歌手开始位置, 假)
                                    json文本_歌手 ＝ 取文本中间 (json文本, 歌手开始位置 ＋ 取文本长度 (#歌手_start), 歌手结束位置 － 歌手开始位置 － 取文本长度 (#歌手_start))
                                .如果真结束

                            .如果真结束

                        .如果真结束

                    .如果真结束

                .如果真结束

            .如果真结束

        .如果真结束

    .如果真结束

.如果真结束

.如果 (json文本_歌手 ＝ 歌手)
    标签7.标题 ＝ “歌曲信息匹配成功”
    id结束位置 ＝ 倒找文本 (json文本, #id_end, 歌名位置, 假)
    id开始位置 ＝ 倒找文本 (json文本, #id_start, id结束位置, 假)
    id ＝ 取文本中间 (json文本, id开始位置 ＋ 取文本长度 (#id_start), id结束位置 － id开始位置 － 取文本长度 (#id_start))
    .如果真 (ID标签.内容 ＝ “”)
        ID标签.内容 ＝ id
    .如果真结束
    .如果真 (ID标签.内容 ≠ id)
        ID标签.内容 ＝ id
    .如果真结束

.否则

    标签7.标题 ＝ “歌曲信息匹配失败”
    ID标签.内容 ＝ “ID获取失败”
.如果结束





.子程序 _ID标签_内容被改变
.局部变量 i, 整数型

tag ＝ “”
.如果 (ID标签.内容 ＝ “ID获取失败”)
    TAG编辑框.内容 ＝ “ID获取失败”
.否则

    tag_json ＝ 到文本 (读入文件 (取运行目录 () ＋ 输出文件))
    .如果 (寻找文本 (tag_json, id, , 假) ＝ -1)
        TAG编辑框.内容 ＝ “无”
        ADD编辑框.内容 ＝ “”
    .否则

        tag开始位置 ＝ 寻找文本 (tag_json, #tag_start, 寻找文本 (tag_json, id, , 假), 假)
        tag结束位置 ＝ 寻找文本 (tag_json, #tag_end, tag开始位置, 假)
        .如果 (tag开始位置 ＝ -1 或 tag结束位置 ＝ -1)
            TAG编辑框.内容 ＝ “无内容”
            ADD编辑框.内容 ＝ “”
        .否则

            tag中间内容 ＝ 取文本中间 (tag_json, tag开始位置 ＋ 取文本长度 (#tag_start), tag结束位置 － tag开始位置 － 取文本长度 (#tag_start))
            .如果 (寻找文本 (tag中间内容, #tag分割, , 假) ＝ -1)
                tag ＝ tag中间内容
            .否则

                tag分割 ＝ 分割文本 (tag中间内容, #tag分割, )
                i ＝ 2
                tag ＝ tag分割 [1]
                .计次循环首 (取数组成员数 (tag分割) － 1, )
                    tag ＝ tag ＋ “, ” ＋ tag分割 [i]
                    i ＝ i ＋ 1

                .计次循环尾 ()
            .如果结束
            TAG编辑框.内容 ＝ tag  ' 有内容
            ADD编辑框.内容 ＝ tag
        .如果结束

    .如果结束

.如果结束


.子程序 _按钮1_被单击
.局部变量 i, 整数型
.局部变量 q, 整数型
.局部变量 u, 整数型
.局部变量 临时tag_json分割, 文本型, , "0"
.局部变量 临时tag_json, 文本型

.如果 (ID标签.内容 ＝ “ID获取失败”)
    信息框 (“因ID获取失败，TAG提交失败。”, 0, “提示”, )
.否则

    .如果 (ADD编辑框.内容 ＝ “”)
        信息框 (“空值。”, 0, “提示”, )
    .否则

        .如果真 (寻找文本 (tag_json, id, , 假) ≠ 1)  ' 删除重复
            临时tag_json分割 ＝ 分割文本 (tag_json, #换行符, )
            .计次循环首 (取数组成员数 (临时tag_json分割), u)
                .如果真 (寻找文本 (临时tag_json分割 [u], id, , 假) ＝ -1)
                    临时tag_json ＝ 临时tag_json ＋ 临时tag_json分割 [u] ＋ #换行符
                .如果真结束

            .计次循环尾 ()
            写到文件 (取运行目录 () ＋ 输出文件, 到字节集 (临时tag_json))
            tag_json ＝ 到文本 (读入文件 (取运行目录 () ＋ 输出文件))
        .如果真结束
        tag输出 ＝ ADD编辑框.内容
        tag输出json ＝ “{” ＋ #引号 ＋ id ＋ #引号 ＋ “:{” ＋ #引号 ＋ “TAG” ＋ #引号 ＋ “:[”
        .如果 (寻找文本 (tag输出, “,”, , 假) ＝ -1)
            tag输出json ＝ tag输出json ＋ #引号 ＋ tag输出 ＋ #引号
        .否则

            tag输出分割 ＝ 分割文本 (tag输出, “, ”, )
            tag输出json ＝ tag输出json ＋ #引号 ＋ tag输出分割 [1] ＋ #引号
            q ＝ 2
            .计次循环首 (取数组成员数 (tag输出分割) － 1, )
                tag输出json ＝ tag输出json ＋ “,” ＋ #引号 ＋ tag输出分割 [q] ＋ #引号
                q ＝ q ＋ 1
            .计次循环尾 ()
        .如果结束

        tag输出json ＝ tag输出json ＋ “]}},”
        tag输出json ＝ tag_json ＋ tag输出json ＋ #换行符
        写到文件 (取运行目录 () ＋ 输出文件, 到字节集 (tag输出json))

        ' 重新获取并显示 TAG
        tag_json ＝ 到文本 (读入文件 (取运行目录 () ＋ 输出文件))
        tag开始位置 ＝ 寻找文本 (tag_json, #tag_start, 寻找文本 (tag_json, id, , 假), 假)
        tag结束位置 ＝ 寻找文本 (tag_json, #tag_end, tag开始位置, 假)
        .如果 (tag开始位置 ＝ -1 或 tag结束位置 ＝ -1)
            TAG编辑框.内容 ＝ “无内容”
            ADD编辑框.内容 ＝ “”
        .否则

            tag中间内容 ＝ 取文本中间 (tag_json, tag开始位置 ＋ 取文本长度 (#tag_start), tag结束位置 － tag开始位置 － 取文本长度 (#tag_start))
            .如果 (寻找文本 (tag中间内容, #tag分割, , 假) ＝ -1)
                tag ＝ tag中间内容
            .否则

                tag分割 ＝ 分割文本 (tag中间内容, #tag分割, )
                i ＝ 2
                tag ＝ tag分割 [1]
                .计次循环首 (取数组成员数 (tag分割) － 1, )
                    tag ＝ tag ＋ “, ” ＋ tag分割 [i]
                    i ＝ i ＋ 1

                .计次循环尾 ()
            .如果结束
            TAG编辑框.内容 ＝ tag  ' 有内容
            ADD编辑框.内容 ＝ tag
        .如果结束

    .如果结束


.如果结束


.子程序 _按钮2_被单击

.如果 (tag ＝ “”)
    share ＝ “分享单曲：https://music.163.com/#/song?id=” ＋ id ＋ #换行符 ＋ “歌名：” ＋ 歌名 ＋ “      ” ＋ “歌手：” ＋ 歌手
.否则

    share ＝ “分享单曲：https://music.163.com/#/song?id=” ＋ id ＋ #换行符 ＋ “歌名：” ＋ 歌名 ＋ “      ” ＋ “歌手：” ＋ 歌手 ＋ #换行符 ＋ “TAG：” ＋ tag
.如果结束

置剪辑板文本 (share)
